services:
  - type: web
    name: ve-backend
    env: node
    plan: starter
    buildCommand: cd backend && npm ci
    startCommand: cd backend && node server.js
    autoDeploy: true
    healthCheckPath: /health
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: ve-postgres
          property: connectionString
      - key: OPENAI_API_KEY
        sync: false
      - key: JWT_SECRET
        sync: false
      - key: ALLOWED_ORIGINS
        value: "*"

  - type: web
    name: ve-n8n
    env: docker
    dockerfilePath: n8n/Dockerfile
    plan: starter
    autoDeploy: true
    envVars:
      - key: N8N_ENCRYPTION_KEY
        sync: false
      - key: N8N_BASIC_AUTH_ACTIVE
        value: "true"
      - key: N8N_BASIC_AUTH_USER
        sync: false
      - key: N8N_BASIC_AUTH_PASSWORD
        sync: false
      - key: WEBHOOK_URL
        sync: false
      - key: N8N_HOST
        sync: false
    disk:
      name: n8n-data
      mountPath: /home/node/.n8n
      sizeGB: 1

databases:
  - name: ve-postgres
    plan: basic-256mb
    postgresMajorVersion: '17'
    diskSizeGB: 15
